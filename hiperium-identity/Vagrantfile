# -*- mode: ruby -*-
# vi: set ft=ruby :

# # Vagrant 1.7+ automatically inserts a different
# # insecure keypair for each new VM created. The easiest way
# # to use the same keypair for all the machines is to disable
# # this feature and rely on the legacy insecure key.
# # config.ssh.insert_key = false
# # 
# # vagrant-libvirt needs to run in series (not in parallel) to avoid
# # trying to create the network twice... eg: vagrant up --no-parallel
# # alternatively, you can just create the vm's one at a time manually.
Vagrant.configure("2") do |config|
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    config.vm.box = "centos/7"

    # Provider-specific configuration
    config.vm.provider :libvirt do |libvirt|
        libvirt.driver = "qemu"
        libvirt.connect_via_ssh = false
        libvirt.username = "root"
        libvirt.storage_pool_name = "default"
    end

    # General machine definition
    config.vm.provider :libvirt do |domain|
        domain.memory = 2048
        domain.cpus = 2
        domain.autostart = true
    end

    # Machine-specific definition
    config.vm.define :d1Balancer do |vmconfig|
        vmconfig.vm.hostname = "d1Balancer"
        vmconfig.vm.network :private_network, 
      	    :ip => "192.168.100.66",
            :libvirt__host_ip => "192.168.100.65",
      	    :libvirt__netmask => "255.255.255.240",
            :libvirt__network_name => "HiperiumIdentity"
	vmconfig.vm.network :forwarded_port, host: 8081, guest: 80			# This is the HTTPD load balancer VM for this domain
   	vmconfig.vm.network :forwarded_port, host: 10122, guest: 22, id: "ssh"		# This avoid SSH overlaping port in the host 
	#vmconfig.vm.provision :shell, path: "bootstrap.sh", keep_color: true	
    end 

    # Machine-specific definition
    (1..2).each do |i|
	config.vm.define "d1Node#{i}" do |vmconfig|
            vmconfig.vm.hostname = "d1Node#{i}"
            vmconfig.vm.network :private_network, 
		:ip => "192.168.100.#{66+i}",
		:libvirt__host_ip => "192.168.100.65",
      	    	:libvirt__netmask => "255.255.255.240",
            	:libvirt__network_name => "HiperiumIdentity"
            vmconfig.vm.network :forwarded_port, host: "1012#{2+i}", guest: 22, id: "ssh"  # This avoid SSH overlaping port in the host
        end
    end

    # Put the VM Box in Vagrant Cache for future references
    if Vagrant.has_plugin?("vagrant-cachier")
    	config.cache.scope = :box
    end
end
