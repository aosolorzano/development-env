# -*- mode: ruby -*-
# vi: set ft=ruby :

# # Vagrant 1.7+ automatically inserts a different
# # insecure keypair for each new VM created. The easiest way
# # to use the same keypair for all the machines is to disable
# # this feature and rely on the legacy insecure key.
# # config.ssh.insert_key = false
# # 
# # vagrant-libvirt needs to run in series (not in parallel) to avoid
# # trying to create the network twice... eg: vagrant up --no-parallel
# # alternatively, you can just create the vm's one at a time manually.
Vagrant.configure("2") do |config|
    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://atlas.hashicorp.com/search.
    config.vm.box = "CentOS7-1603_01"

    # You have to setup username for ssh access 
    config.ssh.shell = "bash -c 'BASH_ENV=/etc/profile exec bash'"		## vagrant issues #1673..fixes hang with configure_networks
    config.vm.synced_folder ".", "/vagrant", id: "vagrant-root", disabled: true	## Disable sharing folders

    # Provider-specific configuration
    config.vm.provider :libvirt do |libvirt|
        libvirt.driver = "qemu"
        libvirt.connect_via_ssh = false
        libvirt.username = "root"
        libvirt.storage_pool_name = "default"
    end

    # Machine-specific definition
    config.vm.define :vm0 do |vm0|
        vm0.vm.network :private_network, 
      	    :ip => "172.16.76.2",
            :libvirt__host_ip => "172.16.76.71",
      	    :libvirt__netmask => "255.255.255.240",
            :libvirt__network_name => "IdentityNetwork"
    	vm0.vm.provider :libvirt do |domain|
    	    domain.memory = 2048
      	    domain.cpus = 1
            domain.autostart = true
        end
	#vm0.vm.network "forwarded_port", guest: 80, host: 81
	#vm0.vm.provision :shell, path: "bootstrap-vm0.sh", keep_color: true	
    end 

    # Machine-specific definition
    config.vm.define :vm1 do |vm1|
        vm1.vm.network :private_network,
            :ip => "172.16.76.3",
            :libvirt__host_ip => "172.16.76.71",
            :libvirt__netmask => "255.255.255.240",
            :libvirt__network_name => "IdentityNetwork"
        vm1.vm.provider :libvirt do |domain|
            domain.memory = 2048
            domain.cpus = 1
            domain.autostart = true
        end
    end


    # Enable provisioning with a shell script
    config.vm.provision "shell", inline: <<-SHELL
        echo "UPDATING OPERATING SYSTEM"
        sudo yum install -y epel-release
        sudo yum update -y
    	echo "INSTALLING DOCKER..."
        #curl -sSL https://get.docker.com/ | sh
        sudo yum install -y docker
    	#sudo usermod -aG docker vagrant         	## add vagrant user to docker group
    	sudo systemctl start docker.service
	sudo systemctl enable docker.service
    	echo "RUNNING DOCKER TEST..."
    	docker run hello-world                   	## verify that docker-engine is installed correctly
    SHELL

end
